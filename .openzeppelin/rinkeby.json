{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x66A619768983eBeb0E0Dc4719569b8Ca206e0Ef8",
    "txHash": "0x99ddda5d0defb5dab081f8910929dfa6a0e73729a63817bc275010f23d722eee",
    "deployTransaction": {
      "hash": "0x99ddda5d0defb5dab081f8910929dfa6a0e73729a63817bc275010f23d722eee",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x5a0350846f321524d0fBe0C6A94027E89bE23bE5",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca08"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 119,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x1dc8c92846b879f96bab8b27869f2e91cd575e6740fd1fad5ef63f895fe7eddd",
      "s": "0x3ac959ebb80d153463e737be2569294bf321d91d83e93f7471add99aa72af09d",
      "v": 44,
      "creates": "0x66A619768983eBeb0E0Dc4719569b8Ca206e0Ef8",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x5E33e65447806eef15dB6FF52917082c3D4FBf56",
      "txHash": "0x01296fd5c511bf44545638312e01225a2edd2d9898c0014ede588254bd168f87",
      "kind": "transparent"
    },
    {
      "address": "0x4f60d5217531a00947cc3592e76A8a01dea7BD2C",
      "txHash": "0x0cbe7c11a815b382f5fcec65a11b0b23480041a4ba98c77c55f748eee3f77492",
      "kind": "transparent"
    },
    {
      "address": "0xf841DB74Bd488827fEb0c256608b1169dE53E3fC",
      "txHash": "0x7060f456fab840937b6c7f72934ba37f2a614c1195d4ffbe010cf938750bd957",
      "kind": "transparent"
    },
    {
      "address": "0x035cC163aD4EBBc6272D95eb0Fa64677e0fd70f8",
      "txHash": "0x3d67ae288a846e369ae038de297936b1455228424808f68e54cb887c288bea21",
      "kind": "transparent"
    }
  ],
  "impls": {
    "28d349c7397b90e61df5b100335593a6592fa5b065362afd8f227040a14e60d7": {
      "address": "0xcb8E069815708cf9a80F090Dc457FfF23f443210",
      "txHash": "0xd563ede6a73309a7f0113b82eba196da499e9e1290c6482f6e732b2ba448c2ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10242_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7126_storage)",
            "src": "contracts/CHIManager.sol:48"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:89"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10242_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10242_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7126_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7126_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d535a51e29459d64c6fba6b915f4396b53a4026a274a00973ef676026c824489": {
      "address": "0xa07ab63071Ac1C6d3dd40Ef21f9221f1D0062Cc1",
      "txHash": "0x29a9643e03309ff16dce4fac5f658e5cb4db0275e81e56d969ddbb8987213ae9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10515_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7130_storage)",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:91"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10515_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10515_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7130_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7130_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efe16cfb693ecc051ab102446f94360ad09147842c27c3338d49bee0ea833ea4": {
      "address": "0x3e1E0d3caD6CbdC5f32Ef3e0DaF5e4664329D86e",
      "txHash": "0xf95af8d0d8b5f104eae99903cfedc314cc5728659d9074f00caa25c4423c0b28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10525_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7130_storage)",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:91"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:132"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10525_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10525_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7130_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7130_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e84c2ecb105cccf50245aa4ecbdd9786d50f39fc49007962b78eafc895518b1": {
      "address": "0x2C8568621BBD4Ced0C360B07467cf57eBF6280f2",
      "txHash": "0xdb9e2ccd7f362fad964f3bd93aeefb6fa7519a7c39fc099920bb26f5e34943aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10773_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:141"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:316"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10773_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10773_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c6a24dafac2ebd80a96e9ecde82fab98cfa61a91433f112c5fd6db63626baf8": {
      "address": "0x380F138B24191418bd782013d53636dC2ab3DEF7",
      "txHash": "0x76caf0c86f905289e8ce0340edbf2fcde76f0c16823c4f4a6cff9f9d5a2475f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10785_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:145"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:320"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10785_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10785_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dd2804665a1b55c6e598963dce5b93937acbbc9a22f82535b60b4df6c99102f": {
      "address": "0x3ecb1545ED86bAC638048B7EcEEc4C5380d7be29",
      "txHash": "0x68997398eee946569d70895a8c7c7a0a8c9d7b53662a2cc22ec2f549e2839d6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10975_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:141"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:316"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10975_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10975_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b46e5e87de670d0b73ac2a4ec798e8bebe1f7c80b4bc5986cf435a2b02dcf1e0": {
      "address": "0x0723a9E8d473F49472cc3bD133DEA0157586C56f",
      "txHash": "0x8afa601437f65207a415ff04eacb86a2ecd39cd44cc9c30b4572609b4d26edd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12549_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7391_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:61"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:63"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12549_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12549_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7391_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7391_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "545cc18cc1da8795365b61433c9709a82ef4a94c372915a34254f0f88b07eebb": {
      "address": "0x114d322e4Ad277E56Aed0CbD1Ee5aCD840bF4c89",
      "txHash": "0x1be52133868cf338c6041744fc074a9d7d767e2c609be05478d1444764330215",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12266",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12266": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ba048dea2516302d26b3cf33c80fa3604995d14849886dd21cc83421bf6f9fc3": {
      "address": "0x786ca3fC016D0d5eC4982B001d65b42448DDe481",
      "txHash": "0xc39623955a5c500d852096319b2e77df20ae21670c7649fd73bf5bbd14cadc14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12335",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12335": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f7bdb446fc13a36e60996124cdc3d649b969f0d3477198a23a54f1e28a980600": {
      "address": "0x1863405FFf9f3B3C7B1F503385Aaf953d0a94D84",
      "txHash": "0xc256d98a1a437b321a9472dff84a25a0793ba59070da89d29f581b04206fffd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12618_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7393_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12618_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12618_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7393_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7393_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aab463ffa7ffbe8f16e051312ba88b54b043ee42c6045509a4aeee258f866e28": {
      "address": "0x2918FfE4eFe4C5E4C3A571F61966D7A360AC50A8",
      "txHash": "0x2c03fb179f84c2eb5ac0681175bd3ec33c64c420d3e552159acd5d5c61d97868",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12349",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12349": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e761da2584722b5f2caac9b14f1f118afc85b3325a41dac369edb3d9f31c5daa": {
      "address": "0xfec0cd35d83Fd7C4Ba92b39044Fb9a2114869CDf",
      "txHash": "0x84fcafd84aeabfdce164a16e1ce6b8deec6ba35585bfc8057019ae6bd7a4f5aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12359",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "_userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12359": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
