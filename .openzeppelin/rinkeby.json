{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x66A619768983eBeb0E0Dc4719569b8Ca206e0Ef8",
    "txHash": "0x99ddda5d0defb5dab081f8910929dfa6a0e73729a63817bc275010f23d722eee",
    "deployTransaction": {
      "hash": "0x99ddda5d0defb5dab081f8910929dfa6a0e73729a63817bc275010f23d722eee",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x5a0350846f321524d0fBe0C6A94027E89bE23bE5",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca08"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 119,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x1dc8c92846b879f96bab8b27869f2e91cd575e6740fd1fad5ef63f895fe7eddd",
      "s": "0x3ac959ebb80d153463e737be2569294bf321d91d83e93f7471add99aa72af09d",
      "v": 44,
      "creates": "0x66A619768983eBeb0E0Dc4719569b8Ca206e0Ef8",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x5E33e65447806eef15dB6FF52917082c3D4FBf56",
      "txHash": "0x01296fd5c511bf44545638312e01225a2edd2d9898c0014ede588254bd168f87",
      "kind": "transparent"
    },
    {
      "address": "0x4f60d5217531a00947cc3592e76A8a01dea7BD2C",
      "txHash": "0x0cbe7c11a815b382f5fcec65a11b0b23480041a4ba98c77c55f748eee3f77492",
      "kind": "transparent"
    },
    {
      "address": "0xf841DB74Bd488827fEb0c256608b1169dE53E3fC",
      "txHash": "0x7060f456fab840937b6c7f72934ba37f2a614c1195d4ffbe010cf938750bd957",
      "kind": "transparent"
    },
    {
      "address": "0x035cC163aD4EBBc6272D95eb0Fa64677e0fd70f8",
      "txHash": "0x3d67ae288a846e369ae038de297936b1455228424808f68e54cb887c288bea21",
      "kind": "transparent"
    },
    {
      "address": "0x9AF53485b8BC4Ff807CF1F5564c55fE12F019c96",
      "txHash": "0x826241a1c007e453c406d68812b1258cd085538a93e9c1967bb0d16f20579f6e",
      "kind": "transparent"
    },
    {
      "address": "0xD1Bb0BD413c24CD169545EB4857AE25A40cb211F",
      "txHash": "0xa994daf7d709c91b4dc32271c649f38f53bf8bcf57514660e4d951e2ac7a6b7a",
      "kind": "transparent"
    },
    {
      "address": "0xF5e3e76Da5423BafD8764FB5aF0AaC7398a8574C",
      "txHash": "0xc83e89ee199aeab397806159b78d26d65991c7a7fa9c75f893553919c90ec03a",
      "kind": "transparent"
    },
    {
      "address": "0x20671A56c24951D42375e363B39506156E54a6F3",
      "txHash": "0x27d84afed29d837ef6eda48e4afd4c941699a7a664519076310ac8c96c9bc049",
      "kind": "transparent"
    },
    {
      "address": "0x748673632Ee4D17Ca092025a9220a8660930d0fb",
      "txHash": "0x27a6d777b3891685cce7e4823ec537e1fb75af7e4160f45b57f509d99e6f5ac0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "28d349c7397b90e61df5b100335593a6592fa5b065362afd8f227040a14e60d7": {
      "address": "0xcb8E069815708cf9a80F090Dc457FfF23f443210",
      "txHash": "0xd563ede6a73309a7f0113b82eba196da499e9e1290c6482f6e732b2ba448c2ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10242_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7126_storage)",
            "src": "contracts/CHIManager.sol:48"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:89"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10242_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10242_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7126_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7126_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d535a51e29459d64c6fba6b915f4396b53a4026a274a00973ef676026c824489": {
      "address": "0xa07ab63071Ac1C6d3dd40Ef21f9221f1D0062Cc1",
      "txHash": "0x29a9643e03309ff16dce4fac5f658e5cb4db0275e81e56d969ddbb8987213ae9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10515_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7130_storage)",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:91"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10515_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10515_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7130_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7130_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efe16cfb693ecc051ab102446f94360ad09147842c27c3338d49bee0ea833ea4": {
      "address": "0x3e1E0d3caD6CbdC5f32Ef3e0DaF5e4664329D86e",
      "txHash": "0xf95af8d0d8b5f104eae99903cfedc314cc5728659d9074f00caa25c4423c0b28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10525_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7130_storage)",
            "src": "contracts/CHIManager.sol:50"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:91"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:132"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10525_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10525_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7130_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7130_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e84c2ecb105cccf50245aa4ecbdd9786d50f39fc49007962b78eafc895518b1": {
      "address": "0x2C8568621BBD4Ced0C360B07467cf57eBF6280f2",
      "txHash": "0xdb9e2ccd7f362fad964f3bd93aeefb6fa7519a7c39fc099920bb26f5e34943aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10773_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:141"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:316"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10773_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10773_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c6a24dafac2ebd80a96e9ecde82fab98cfa61a91433f112c5fd6db63626baf8": {
      "address": "0x380F138B24191418bd782013d53636dC2ab3DEF7",
      "txHash": "0x76caf0c86f905289e8ce0340edbf2fcde76f0c16823c4f4a6cff9f9d5a2475f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10785_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:145"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:320"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10785_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10785_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dd2804665a1b55c6e598963dce5b93937acbbc9a22f82535b60b4df6c99102f": {
      "address": "0x3ecb1545ED86bAC638048B7EcEEc4C5380d7be29",
      "txHash": "0x68997398eee946569d70895a8c7c7a0a8c9d7b53662a2cc22ec2f549e2839d6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2296_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)10975_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7132_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:94"
          },
          {
            "contract": "CHIManager",
            "label": "_vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:141"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:316"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)10975_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)10975_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7132_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7132_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2919_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2533_storage"
              }
            ]
          },
          "t_struct(Set)2533_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2296_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1978_storage"
              }
            ]
          },
          "t_struct(Map)1978_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1970_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b46e5e87de670d0b73ac2a4ec798e8bebe1f7c80b4bc5986cf435a2b02dcf1e0": {
      "address": "0x0723a9E8d473F49472cc3bD133DEA0157586C56f",
      "txHash": "0x8afa601437f65207a415ff04eacb86a2ecd39cd44cc9c30b4572609b4d26edd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:35"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12549_storage)",
            "src": "contracts/CHIManager.sol:38"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7391_storage)",
            "src": "contracts/CHIManager.sol:51"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:61"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:63"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12549_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12549_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7391_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7391_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "545cc18cc1da8795365b61433c9709a82ef4a94c372915a34254f0f88b07eebb": {
      "address": "0x114d322e4Ad277E56Aed0CbD1Ee5aCD840bF4c89",
      "txHash": "0x1be52133868cf338c6041744fc074a9d7d767e2c609be05478d1444764330215",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12266",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12266": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ba048dea2516302d26b3cf33c80fa3604995d14849886dd21cc83421bf6f9fc3": {
      "address": "0x786ca3fC016D0d5eC4982B001d65b42448DDe481",
      "txHash": "0xc39623955a5c500d852096319b2e77df20ae21670c7649fd73bf5bbd14cadc14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12335",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12335": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f7bdb446fc13a36e60996124cdc3d649b969f0d3477198a23a54f1e28a980600": {
      "address": "0x1863405FFf9f3B3C7B1F503385Aaf953d0a94D84",
      "txHash": "0xc256d98a1a437b321a9472dff84a25a0793ba59070da89d29f581b04206fffd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12634_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7393_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12634_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12634_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7393_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7393_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aab463ffa7ffbe8f16e051312ba88b54b043ee42c6045509a4aeee258f866e28": {
      "address": "0x2918FfE4eFe4C5E4C3A571F61966D7A360AC50A8",
      "txHash": "0x2c03fb179f84c2eb5ac0681175bd3ec33c64c420d3e552159acd5d5c61d97868",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12349",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12349": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e761da2584722b5f2caac9b14f1f118afc85b3325a41dac369edb3d9f31c5daa": {
      "address": "0xfec0cd35d83Fd7C4Ba92b39044Fb9a2114869CDf",
      "txHash": "0x84fcafd84aeabfdce164a16e1ce6b8deec6ba35585bfc8057019ae6bd7a4f5aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12359",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "_userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12359": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4237327838707c958af7898f1a6dee15bc265db499647bc792fde2cf5b6b8484": {
      "address": "0xDBa20172d36E894c1C4eE360e6b09E7289092dC7",
      "txHash": "0x091bde05376334d9b51afbe4141c9e661c0f1aff54147ee1b9be9de274fb2e6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12380",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "_userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12380": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "08ad343e507e7bcccc5f2fa68eb7862afbe5e8bf195eabefbc1c6b1f8bd019b0": {
      "address": "0x778c85C1d256152eeE00C399b3f4a9B79c4ABB02",
      "txHash": "0xe9aba22d8f17f630e793dd0135500f418ca3fa156e25e99083971cf642f31af0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12351",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12351": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c8557776af2395a4442ee92683c8eaf6ef144a5a4c3e7f0987666b21099bce25": {
      "address": "0xf206c6d79bD82C26d295dAAd07435D91b9043d81",
      "txHash": "0x457b899697725b73bf54a29a213793f0a805525481be15b65291f3f8b7bf2a3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12761_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12761_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12761_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0877a5ccfd05e9a4dbae819798823b9a748aba6f653ca1aa67d38d4434423a6": {
      "address": "0xE6df4ee5Cf6F8a17fbe32295764f88DE08CcF91B",
      "txHash": "0x117174913e71a2f540c3d30421830d2cc22f4848df28e736b071a61b15520f1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12356",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12356": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2b78e15dccb7617416fbe67f851f16374fe34188b7b3faa65be07bf7f4cdd2e7": {
      "address": "0xC9F5a94c2dEa29CCb41e01DDD8632FE1fA98aaf7",
      "txHash": "0x88eb867c71c59b6c4b5fc20d5b9695fd30515555123096dd79e0f4e9f570962d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12353",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12353": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "67231e6d63913230c5182e63c6dee70064f427476e8391dbd7bf200b0ec0ba93": {
      "address": "0xEf1B6593D4c5E8b7C91e3E86FD4a7d067F85Aad5",
      "txHash": "0x20a67f8989dae3531e58f3d4b114306a69ac5f7efd703ec83b82cf64e7df492e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12362",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12362": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a6c0992dfadaf114552da2224442033a444de86a3ba9ac5e6cae7ab1eb5d286d": {
      "address": "0x6cd0A4B7002d6Cf03290009DBa5D2ABd60B29FEC",
      "txHash": "0x19b7e982ac5d7a93d7c22027dc783627ea1216aa76c915a37a3ccac4e713baeb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12383",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12383": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f41b6d93005dd8b4f062d5a955a8401784b12761c8afa866d8ee9f000773083e": {
      "address": "0x7C6cb34B80A65582BEa4Cdd3aF55E6C8bc6e6707",
      "txHash": "0xc852cc803ef3d99bad40e2364dc9e1485d73ad70388c9cd2f225d40e9036507f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12386",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12386": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e419d767d9ba70831ddcd0366a221700a73598e0f8587a32f946d0b5d2976480": {
      "address": "0x20ddBE57184162b0DF562E8dd9125bA8CfBFE411",
      "txHash": "0xa8ebdb12713ad23b65363df5b7bd6d7a7e0332190afb186e631d44d262e39a07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12428",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12428": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3a21e905b4b3a2ac03432b0967e1a16b3ab9f3e300f195fbb5afb87603849da0": {
      "address": "0x21502B528042603241053Cf5c1786d59F0Bf2FA7",
      "txHash": "0x0e180337047629ece8e8e71d0f8c479d0b1b356ab0f8b493b991c7cc4a0aaceb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12407",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12407": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d5611e3b7640f5ee518b28254a967a1bf211e0d2c7373a5e99c03982da193b2d": {
      "address": "0x7924Cf1e98c77BBDCA647813b31573B6bf11293B",
      "txHash": "0x9d21362f8ba574c6f2b57d2db777a098c522d328a1d6f04dbb428511f98e6426",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:23"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12398",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12398": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "74fba9bcd505eace9d4cd9bab47ca86a9b65127d4624f6502edafad8f6b70d8d": {
      "address": "0x582c181deF87F354c7046F86Ca9709C426E0A320",
      "txHash": "0xd7ec941cdb73dee3df94e585e89bbbf7f2b114f04bab849329e1c66cb332cb87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12546",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12546": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4ae64932bad1e51b5905b417429badd35fcbdfa8b74ad792425730cc800aa881": {
      "address": "0x01a20407992940A5590d367E7c061dF9f7cbF23B",
      "txHash": "0xffbde51af10d2667c421f24a0838af4b4219d97d44b41f3555e3c58150a69377",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12522",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12522": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f24e7dea89da88e2db5fc0d11482cae3d494a6ea232a6354b99cdcbcf4d04a41": {
      "address": "0x96da64E271c32709792b6B0cD05B098b00752266",
      "txHash": "0xbdfaadf942452df7539573a112322155c9ab3a8f8d5908ebe7a89dbecb58ecb0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12518",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12518": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "708fe40ab7b3b65daa27715c2af75d6ce9aab08a0a5512e651cd5f23c5b19d65": {
      "address": "0x959e6e79fC6c6C9C69dC3835A6fc571a4bA9A725",
      "txHash": "0x9cef3c6b5d4bdfd7bdee7bb935c2076675ccbc091eca792adc470c829423c857",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:24"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12529",
            "src": "contracts/RewardPool.sol:25"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12529": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e4fd867cd9a60a923bd30df56aa567d095287ed607a56a1eff244b9a2f1b17f4": {
      "address": "0xD263e454804919967CEBAf7ca1EdD7f694B04433",
      "txHash": "0xc074204335858733d7a4a915d1a5cf6a8920a31b26efbc563d9a6f0d865517dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12478",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:41"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12478": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "927039fd72d6d2c2bc9df9f2bee6e323c11e54f8b818398f9e5b5ab660dae6f8": {
      "address": "0x1Fd85BdcfF106F6675c1917FFC1C3782403FfA1b",
      "txHash": "0x01647340a350ccf22e9fe8d2bdfd9e9e4ed7df4da7040fa0407e7d8207538c00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12773_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12773_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12773_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "df25452b3893fbc143201b0fa6e770909687fb42dffadb9b2a2a64b80e042d3b": {
      "address": "0x44c6FE480dd11acD3E61b1492AD465867CbcDdD5",
      "txHash": "0x671cc25c16fa5d160a5e2d344bd7bf77cc9b80147da8b575390076d8b47a1a21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)12495",
            "src": "contracts/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:39"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:41"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/RewardPool.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)12495": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2c08023ff037660fff07b340d1c18e8083ceaf3ea08ffa4ab587a767e0421f47": {
      "address": "0xbe4A093B1F5590C49acFb8B7c76A99064F87fC42",
      "txHash": "0xca721e4f68f06341454a3a259901501e85c03529cec04ebda87eb26caae3dae0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12089_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12089_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12089_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "92f839f68c539875f43e37a1490353a949eafeb81bc5d5d787b5e81244a7fe66": {
      "address": "0x1f1abA7CCcd2866FA7bBCD8e15D003C57e0C7212",
      "txHash": "0x4112a195775e20dc2aabcf1056c196b753e2b634707fb12d3f354ece19bfeb43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/reward/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)11808",
            "src": "contracts/reward/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/reward/RewardPool.sol:29"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:36"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:39"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:41"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)11808": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f48b9799c70a4cbe968d0e4c85e6b1c9ab6225473abf91b88a2204638be746d7": {
      "address": "0xeaDaf6c1BE10f301BbE0e81d38d60f9AC761EfC4",
      "txHash": "0x0cbf75e7edef0852968df26c1bc1b9bdaeb7a90ef30611efe12d364e79451381",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:36"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12085_storage)",
            "src": "contracts/CHIManager.sol:39"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7423_storage)",
            "src": "contracts/CHIManager.sol:52"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:54"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:62"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:64"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:71"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12085_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12085_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7423_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7423_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "213609d91386415a4c27a3b83f60a9e01ea9452538baac446930ed4d7980a403": {
      "address": "0xc40f6DF9ef5A200b3CF3C45Efb89B97095A5C884",
      "txHash": "0x1144380a0f8841256ec5f57e291d8532bef1a9d630a499c08b796b616c1809b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)4382",
            "src": "contracts/reward/RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "chiManager",
            "type": "t_contract(ICHIManager)11819",
            "src": "contracts/reward/RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/reward/RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:31"
          },
          {
            "contract": "RewardPool",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:32"
          },
          {
            "contract": "RewardPool",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/reward/RewardPool.sol:33"
          },
          {
            "contract": "RewardPool",
            "label": "lastUpdateTimes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:34"
          },
          {
            "contract": "RewardPool",
            "label": "rewardPerShareStored",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:35"
          },
          {
            "contract": "RewardPool",
            "label": "_totalShares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/reward/RewardPool.sol:37"
          },
          {
            "contract": "RewardPool",
            "label": "_shares",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:38"
          },
          {
            "contract": "RewardPool",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:40"
          },
          {
            "contract": "RewardPool",
            "label": "userRewardPerSharePaid",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/reward/RewardPool.sol:41"
          }
        ],
        "types": {
          "t_contract(IERC20)4382": {
            "label": "contract IERC20"
          },
          "t_contract(ICHIManager)11819": {
            "label": "contract ICHIManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8058a2c8374df70b52bc31dde0d1b4bfcbc8e89674d7aabe2b9b3749927d0a7": {
      "address": "0x917863aa95A4e4A81E9D1064374222Cb239daC4c",
      "txHash": "0x0eff3db80e583ca70ab16b8bd6e2eb2b5e118fa4dd8d13ab646c0483fc50d55b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12100_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12100_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12100_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9e65aae43e34baa1ec08e699e04bc9640f1cd841325354dbf49e9ded89ba7964": {
      "address": "0x5bd5e34f67a4496e04f9b512A2D293d336b4b141",
      "txHash": "0xfe3f4e5858b3f178bb52c3e25710e2ceebe8a3e8bda6586e99a22361a7db4a87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12531_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12531_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12531_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0dd8365d5907910323e9949342ae6b071aebb42f56feb91bbda4e2f447f06607": {
      "address": "0xeB33555d16DcC184D99f514bd690A797A38B2B8e",
      "txHash": "0xbac3af2fbdf6d9d8562480fb789ca3213fb40bd0255654afbda5d32fee5aca85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12551_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12551_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12551_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aba91b17dd7a931f72e3e58e932c0d1866d2c3d161cf6e1845c9fa2e0bb3b07c": {
      "address": "0x4A494b002FB055F44A8AD3359E7E1af483Db96a2",
      "txHash": "0xff4a2abb91e41149bda26e84aedde1bf836b8783dc3e726ee165a041ab7409d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12715_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12715_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12715_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2a9985207cf2cf806e1bf79280e3f1501ef5cc12f77e1ee87ab19eaf47a5b4d": {
      "address": "0x4946FE75984207a8655C7dc59FC940c26e95Ce2D",
      "txHash": "0x5dece2d09a47c37a30a63698e9850d211596f4d60626c62224bf9752c5a3e4f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12715_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12715_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12715_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0d5ccd2fbde19b7b435e627d8310314491c7c6e6f9626be7aecc69ed5237f64d": {
      "address": "0xEFa3A88d0d9F8a8125aC2Da94aDb9A6e84939637",
      "txHash": "0xb2a1c9c27b1bbe36a5f743799d69f3365fcbb8fdd8dcc994d126c40bf88cd2a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3050_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2427_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "CHIManager",
            "label": "_nextId",
            "type": "t_uint176",
            "src": "contracts/CHIManager.sol:37"
          },
          {
            "contract": "CHIManager",
            "label": "positions",
            "type": "t_mapping(t_bytes32,t_struct(Info)12737_storage)",
            "src": "contracts/CHIManager.sol:40"
          },
          {
            "contract": "CHIManager",
            "label": "_chi",
            "type": "t_mapping(t_uint256,t_struct(CHIData)7424_storage)",
            "src": "contracts/CHIManager.sol:53"
          },
          {
            "contract": "CHIManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:55"
          },
          {
            "contract": "CHIManager",
            "label": "v3Factory",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:56"
          },
          {
            "contract": "CHIManager",
            "label": "yangNFT",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:57"
          },
          {
            "contract": "CHIManager",
            "label": "deployer",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:58"
          },
          {
            "contract": "CHIManager",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/CHIManager.sol:59"
          },
          {
            "contract": "CHIManager",
            "label": "vaultFee",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:60"
          },
          {
            "contract": "CHIManager",
            "label": "tickPercents",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/CHIManager.sol:63"
          },
          {
            "contract": "CHIManager",
            "label": "_tempChiId",
            "type": "t_uint256",
            "src": "contracts/CHIManager.sol:65"
          },
          {
            "contract": "CHIManager",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/CHIManager.sol:72"
          }
        ],
        "types": {
          "t_uint176": {
            "label": "uint176"
          },
          "t_mapping(t_bytes32,t_struct(Info)12737_storage)": {
            "label": "mapping(bytes32 => struct YANGPosition.Info)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Info)12737_storage": {
            "label": "struct YANGPosition.Info",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CHIData)7424_storage)": {
            "label": "mapping(uint256 => struct CHIManager.CHIData)"
          },
          "t_struct(CHIData)7424_storage": {
            "label": "struct CHIManager.CHIData",
            "members": [
              {
                "label": "operator",
                "type": "t_address"
              },
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "vault",
                "type": "t_address"
              },
              {
                "label": "paused",
                "type": "t_bool"
              },
              {
                "label": "archived",
                "type": "t_bool"
              },
              {
                "label": "equational",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)3050_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3050_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2427_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2109_storage"
              }
            ]
          },
          "t_struct(Map)2109_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2101_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2101_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2101_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
